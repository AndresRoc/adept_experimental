<?xml version="1.0"?>
<launch>

	<!-- This launch file provides a socket-based connection to Adept robots
	using the standard ROS Industrial simple_message protocol.

	Several nodes are started, to supply both low-level robot communication
	and higher-level actionlib support:
	 - robot_state : publishes current joint positions and robot state data
	 - motion_download_interface : command robot motion by sending motion points to robot
	 - joint_trajectory_action : actionlib interface to control robot motion
	-->

	<!-- robot_ip: IP-address of the robot's socket-messaging server -->

	<arg name="robot_ip" />

	<!-- copy the specified arguments to the Parameter Server, for use by nodes below -->
	<param name="robot_ip_address" type="str" value="$(arg robot_ip)"/>

	<!-- robot_state: publishes joint positions and robot-state data
		   (from socket connection to robot) -->

	<node pkg="adept_driver" type="robot_state_bswap" name="robot_state"/>

	<!-- motion_download_interface: sends robot motion commands by DOWNLOADING path to robot
		                  (using socket connection to robot) -->
	<node pkg="adept_driver" type="motion_download_interface_bswap" name="motion_download_interface">
	</node>

	<!-- joint_trajectory_action: provides actionlib interface for high-level robot control -->
	<rosparam param="/adept_robot/controller_joint_names" subst_value="True">$(arg controller_joint_names)</rosparam>
	<node pkg="industrial_robot_client" type="joint_trajectory_action" name="joint_trajectory_action" output="screen"/>

</launch>
